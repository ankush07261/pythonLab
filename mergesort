import random
def mergesort(arr):
    if len(arr)>1:
        mid=len(arr)//2
        lefthalf=arr[:mid]
        righthalf=arr[mid:]
        mergesort(lefthalf)
        mergesort(righthalf)
        i=j=k=0
        while i<len(lefthalf) and j<len(righthalf):
            if lefthalf[i]<righthalf[j]:
                arr[k]=lefthalf[i]
                i+=1
            else:
                arr[k]=righthalf[j]
                j += 1
            k += 1
        while i<len(lefthalf):
            arr[k]=lefthalf[i]
            i += 1
            k += 1
        while j<len(righthalf):
            arr[k]=righthalf[j]
            j+=1
            k+=1
    return arr
def insertionsort(arr):
    for i in range (1,len(arr)):
        key=arr[i]
        j = i - 1
        while j >= 0 and key < arr[j]:
            arr[j+1]=arr[j]
            j-=1
        arr[j+1]=key
mylist=[]
for i in range(10):
    mylist.append(random.randint(0,999))
print("in unsorted list")
print(mylist)
print("sorting using insertion sort")
insertionsort(mylist)
print(mylist)
mylist=[]
for i in range(10):
    mylist.append(random.randint(0,999))
print("in unsorted list")
print(mylist)
print("sorting using merge sort")
mergesort(mylist)
print(mylist)
            
            
